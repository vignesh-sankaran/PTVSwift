//
// V3StopAccessibilityWheelchair.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct V3StopAccessibilityWheelchair: Codable {

    public var accessibleRamp: Bool?
    /** Indicates if there is at least one accessible parking spot at the stop that complies with the Disability Standards for Accessible Public Transport under the Disability Discrimination Act (1992) */
    public var parking: Bool?
    /** Indicates if there is at least one accessible telephone at the stop/platform that complies with the Disability Standards for Accessible Public Transport under the Disability Discrimination Act (1992) */
    public var telephone: Bool?
    /** Indicates if there is at least one accessible toilet at the stop/platform that complies with the Disability Standards for Accessible Public Transport under the Disability Discrimination Act (1992) */
    public var toilet: Bool?
    /** Indicates if there is at least one low ticket counter at the stop that complies with the Disability Standards for Accessible Public Transport under the Disability Discrimination Act (1992) */
    public var lowTicketCounter: Bool?
    /** Indicates if there is a space for mobility device to board on or off a transport mode */
    public var manouvering: Bool?
    /** Indicates if there is a raised platform to board a train */
    public var raisedPlatform: Bool?
    /** Indicates if there are ramps (&amp;lt;1:14) at the stop/platform */
    public var ramp: Bool?
    /** Indicates if there is a path beyond the stop which is accessible */
    public var secondaryPath: Bool?
    /** Indicates if there is shelter near the raised platform */
    public var raisedPlatformShelther: Bool?
    /** Indicates if there are ramps (&amp;gt;1:14) at the stop/platform */
    public var steepRamp: Bool?

    public init(accessibleRamp: Bool?, parking: Bool?, telephone: Bool?, toilet: Bool?, lowTicketCounter: Bool?, manouvering: Bool?, raisedPlatform: Bool?, ramp: Bool?, secondaryPath: Bool?, raisedPlatformShelther: Bool?, steepRamp: Bool?) {
        self.accessibleRamp = accessibleRamp
        self.parking = parking
        self.telephone = telephone
        self.toilet = toilet
        self.lowTicketCounter = lowTicketCounter
        self.manouvering = manouvering
        self.raisedPlatform = raisedPlatform
        self.ramp = ramp
        self.secondaryPath = secondaryPath
        self.raisedPlatformShelther = raisedPlatformShelther
        self.steepRamp = steepRamp
    }

    public enum CodingKeys: String, CodingKey { 
        case accessibleRamp = "accessible_ramp"
        case parking
        case telephone
        case toilet
        case lowTicketCounter = "low_ticket_counter"
        case manouvering
        case raisedPlatform = "raised_platform"
        case ramp
        case secondaryPath = "secondary_path"
        case raisedPlatformShelther = "raised_platform_shelther"
        case steepRamp = "steep_ramp"
    }


}

