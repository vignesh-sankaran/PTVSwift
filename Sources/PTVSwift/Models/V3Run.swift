//
// V3Run.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct V3Run: Codable {

    /** Trip/service run identifier */
    public var runId: Int?
    /** Route identifier */
    public var routeId: Int?
    /** Transport mode identifier */
    public var routeType: Int?
    /** stop_id of final stop of run */
    public var finalStopId: Int?
    /** Name of destination of run */
    public var destinationName: String?
    /** Status of metropolitan train run; returns \&quot;scheduled\&quot; for other modes */
    public var status: String?
    /** Direction of travel identifier */
    public var directionId: Int?
    /** Chronological sequence of the trip/service run on the route in direction. Order ascendingly by this field to get chronological order (earliest first) of runs with the same route_id and direction_id. */
    public var runSequence: Int?
    /** The number of remaining skipped/express stations for the run/service from a stop */
    public var expressStopCount: Int?
    public var vehiclePosition: V3VehiclePosition?
    public var vehicleDescriptor: V3VehicleDescriptor?

    public init(runId: Int?, routeId: Int?, routeType: Int?, finalStopId: Int?, destinationName: String?, status: String?, directionId: Int?, runSequence: Int?, expressStopCount: Int?, vehiclePosition: V3VehiclePosition?, vehicleDescriptor: V3VehicleDescriptor?) {
        self.runId = runId
        self.routeId = routeId
        self.routeType = routeType
        self.finalStopId = finalStopId
        self.destinationName = destinationName
        self.status = status
        self.directionId = directionId
        self.runSequence = runSequence
        self.expressStopCount = expressStopCount
        self.vehiclePosition = vehiclePosition
        self.vehicleDescriptor = vehicleDescriptor
    }

    public enum CodingKeys: String, CodingKey { 
        case runId = "run_id"
        case routeId = "route_id"
        case routeType = "route_type"
        case finalStopId = "final_stop_id"
        case destinationName = "destination_name"
        case status
        case directionId = "direction_id"
        case runSequence = "run_sequence"
        case expressStopCount = "express_stop_count"
        case vehiclePosition = "vehicle_position"
        case vehicleDescriptor = "vehicle_descriptor"
    }


}

