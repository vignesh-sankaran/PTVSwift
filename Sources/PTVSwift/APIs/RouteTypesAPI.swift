//
// RouteTypesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Alamofire



open class RouteTypesAPI {
    /**
     View all route types and their names
     
     - parameter token: (query) Please ignore (optional)
     - parameter devid: (query) Your developer id (optional)
     - parameter signature: (query) Authentication signature for request (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func routeTypesGetRouteTypes(token: String? = nil, devid: String? = nil, signature: String? = nil, completion: @escaping ((_ data: V3RouteTypesResponse?,_ error: Error?) -> Void)) {
        routeTypesGetRouteTypesWithRequestBuilder(token: token, devid: devid, signature: signature).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     View all route types and their names
     - GET /v3/route_types
     - parameter token: (query) Please ignore (optional)
     - parameter devid: (query) Your developer id (optional)
     - parameter signature: (query) Authentication signature for request (optional)
     - returns: RequestBuilder<V3RouteTypesResponse> 
     */
    open class func routeTypesGetRouteTypesWithRequestBuilder(token: String? = nil, devid: String? = nil, signature: String? = nil) -> RequestBuilder<V3RouteTypesResponse> {
        let path = "/v3/route_types"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "token": token, 
            "devid": devid, 
            "signature": signature
        ])

        let requestBuilder: RequestBuilder<V3RouteTypesResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
