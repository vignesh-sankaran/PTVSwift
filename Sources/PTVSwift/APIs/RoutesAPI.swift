//
// RoutesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Alamofire



open class RoutesAPI {
    /**
     * enum for parameter routeTypes
     */
    public enum RouteTypes_routesOneOrMoreRoutes: Int {
        case _0 = 0
        case _1 = 1
        case _2 = 2
        case _3 = 3
        case _4 = 4
    }

    /**
     View route names and numbers for all routes
     
     - parameter routeTypes: (query) Filter by route_type; values returned via RouteTypes API (optional)
     - parameter routeName: (query) Filter by name  of route (accepts partial route name matches) (optional)
     - parameter token: (query) Please ignore (optional)
     - parameter devid: (query) Your developer id (optional)
     - parameter signature: (query) Authentication signature for request (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func routesOneOrMoreRoutes(routeTypes: [Int]? = nil, routeName: String? = nil, token: String? = nil, devid: String? = nil, signature: String? = nil, completion: @escaping ((_ data: V3RouteResponse?,_ error: Error?) -> Void)) {
        routesOneOrMoreRoutesWithRequestBuilder(routeTypes: routeTypes, routeName: routeName, token: token, devid: devid, signature: signature).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     View route names and numbers for all routes
     - GET /v3/routes
     - parameter routeTypes: (query) Filter by route_type; values returned via RouteTypes API (optional)
     - parameter routeName: (query) Filter by name  of route (accepts partial route name matches) (optional)
     - parameter token: (query) Please ignore (optional)
     - parameter devid: (query) Your developer id (optional)
     - parameter signature: (query) Authentication signature for request (optional)
     - returns: RequestBuilder<V3RouteResponse> 
     */
    open class func routesOneOrMoreRoutesWithRequestBuilder(routeTypes: [Int]? = nil, routeName: String? = nil, token: String? = nil, devid: String? = nil, signature: String? = nil) -> RequestBuilder<V3RouteResponse> {
        let path = "/v3/routes"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "route_types": routeTypes, 
            "route_name": routeName, 
            "token": token, 
            "devid": devid, 
            "signature": signature
        ])

        let requestBuilder: RequestBuilder<V3RouteResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     View route name and number for specific route ID
     
     - parameter routeId: (path) Identifier of route; values returned by Departures, Directions and Disruptions APIs 
     - parameter token: (query) Please ignore (optional)
     - parameter devid: (query) Your developer id (optional)
     - parameter signature: (query) Authentication signature for request (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func routesRouteFromId(routeId: Int, token: String? = nil, devid: String? = nil, signature: String? = nil, completion: @escaping ((_ data: V3RouteResponse?,_ error: Error?) -> Void)) {
        routesRouteFromIdWithRequestBuilder(routeId: routeId, token: token, devid: devid, signature: signature).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     View route name and number for specific route ID
     - GET /v3/routes/{route_id}
     - parameter routeId: (path) Identifier of route; values returned by Departures, Directions and Disruptions APIs 
     - parameter token: (query) Please ignore (optional)
     - parameter devid: (query) Your developer id (optional)
     - parameter signature: (query) Authentication signature for request (optional)
     - returns: RequestBuilder<V3RouteResponse> 
     */
    open class func routesRouteFromIdWithRequestBuilder(routeId: Int, token: String? = nil, devid: String? = nil, signature: String? = nil) -> RequestBuilder<V3RouteResponse> {
        var path = "/v3/routes/{route_id}"
        let routeIdPreEscape = "\(APIHelper.mapValueToPathItem(routeId))"
        let routeIdPostEscape = routeIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{route_id}", with: routeIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "token": token, 
            "devid": devid, 
            "signature": signature
        ])

        let requestBuilder: RequestBuilder<V3RouteResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
